{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Schema",
  "type": "object",
  "required": [
    "execute",
    "instantiate",
    "query"
  ],
  "properties": {
    "execute": {
      "$ref": "#/definitions/ExecuteMsg"
    },
    "instantiate": {
      "$ref": "#/definitions/InstantiateMsg"
    },
    "query": {
      "$ref": "#/definitions/QueryMsg"
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "properties": {
        "account_type": {
          "type": [
            "string",
            "null"
          ]
        },
        "profile": {
          "type": [
            "string",
            "null"
          ]
        },
        "username": {
          "type": [
            "string",
            "null"
          ]
        },
        "verfication_hash": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "Config": {
      "type": "object",
      "required": [
        "admin",
        "base_cost",
        "base_expiration",
        "cw721",
        "wallet"
      ],
      "properties": {
        "admin": {
          "$ref": "#/definitions/Addr"
        },
        "base_cost": {
          "$ref": "#/definitions/Uint128"
        },
        "base_expiration": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "cw721": {
          "$ref": "#/definitions/Addr"
        },
        "wallet": {
          "$ref": "#/definitions/Addr"
        }
      }
    },
    "ExecuteMsg": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "register"
          ],
          "properties": {
            "register": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "withdraw"
          ],
          "properties": {
            "withdraw": {
              "type": "object",
              "required": [
                "amount"
              ],
              "properties": {
                "amount": {
                  "$ref": "#/definitions/Uint128"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "renew_registration"
          ],
          "properties": {
            "renew_registration": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "extend_subdomain_expiry"
          ],
          "properties": {
            "extend_subdomain_expiry": {
              "type": "object",
              "required": [
                "domain",
                "expiration",
                "subdomain"
              ],
              "properties": {
                "domain": {
                  "type": "string"
                },
                "expiration": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "subdomain": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "update_resolver"
          ],
          "properties": {
            "update_resolver": {
              "type": "object",
              "required": [
                "name",
                "new_resolver"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "new_resolver": {
                  "$ref": "#/definitions/Addr"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "register_subdomain"
          ],
          "properties": {
            "register_subdomain": {
              "type": "object",
              "required": [
                "domain",
                "expiration",
                "new_owner",
                "new_resolver",
                "subdomain"
              ],
              "properties": {
                "domain": {
                  "type": "string"
                },
                "expiration": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "new_owner": {
                  "$ref": "#/definitions/Addr"
                },
                "new_resolver": {
                  "$ref": "#/definitions/Addr"
                },
                "subdomain": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "remove_subdomain"
          ],
          "properties": {
            "remove_subdomain": {
              "type": "object",
              "required": [
                "domain",
                "subdomain"
              ],
              "properties": {
                "domain": {
                  "type": "string"
                },
                "subdomain": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "update_config"
          ],
          "properties": {
            "update_config": {
              "type": "object",
              "required": [
                "config"
              ],
              "properties": {
                "config": {
                  "$ref": "#/definitions/Config"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "update_user_domain_data"
          ],
          "properties": {
            "update_user_domain_data": {
              "type": "object",
              "required": [
                "metadata_update",
                "name"
              ],
              "properties": {
                "metadata_update": {
                  "$ref": "#/definitions/MetaDataUpdateMsg"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "InstantiateMsg": {
      "type": "object",
      "required": [
        "admin",
        "base_cost",
        "base_expiration",
        "cw721",
        "wallet"
      ],
      "properties": {
        "admin": {
          "$ref": "#/definitions/Addr"
        },
        "base_cost": {
          "$ref": "#/definitions/Uint128"
        },
        "base_expiration": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "cw721": {
          "$ref": "#/definitions/Addr"
        },
        "wallet": {
          "$ref": "#/definitions/Addr"
        }
      }
    },
    "MetaDataUpdateMsg": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Account"
          }
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "image": {
          "type": [
            "string",
            "null"
          ]
        },
        "websites": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Website"
          }
        }
      }
    },
    "QueryMsg": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "resolve_record"
          ],
          "properties": {
            "resolve_record": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "record_expiration"
          ],
          "properties": {
            "record_expiration": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "resolve_address"
          ],
          "properties": {
            "resolve_address": {
              "type": "object",
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "$ref": "#/definitions/Addr"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "config"
          ],
          "properties": {
            "config": {
              "type": "object"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Website": {
      "type": "object",
      "properties": {
        "domain": {
          "type": [
            "string",
            "null"
          ]
        },
        "url": {
          "type": [
            "string",
            "null"
          ]
        },
        "verfication_hash": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  }
}
